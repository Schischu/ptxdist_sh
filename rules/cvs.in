## SECTION=applications
# CVS client/server

menuconfig CVS
	tristate
#
# cvs brings its own libz, but the current
# ptxdist patch remove it.
#
	select ZLIB
	select LIBC_CRYPT
	select LIBC_NSL
	prompt "cvs                           "
	help
	  CVS is the Concurrent Versions System. This is a version control system
	  useful for projects using a central repository to hold files and then
	  track all changes made to those files.

if CVS

comment "build options   ---"

config CVS_NDBM
	bool
	default y
	prompt "use built in ndbm"
	help
	  Use the NDBM library distributed with CVS rather than attempting to use a
	  system NDBM library. Note: Disabling this may not work

config CVS_CLIENT
	bool
	select CVS_PSSWRD_CLIENT
	prompt "Build cvs client"
	help
	  Include code for running as a remote client

config CVS_PSSWRD_CLIENT
	bool
	depends on CVS_CLIENT
	prompt "Support password authenticated client"
	help
	  Enable pserver as a remote access method in the CVS client

config CVS_SERVER
	bool
	default y
	prompt "Build cvs server"
	help
	  Include code for running as a server

config CVS_FLOW_CONTROL
	bool
	depends on CVS_SERVER
	default y
	prompt "Enable server flow control"
	help
	  If you are working with a large remote repository and a 'cvs checkout' is
	  swamping your network and memory, define these to enable flow control. You
	  may optionally pass a low water mark in bytes and a high water mark in
	  bytes, separated by commas. (default is enabled 1M,2M)

config CVS_ENCRYPTION
	bool
	depends on CVS_SERVER
	prompt "Enable encryption"
	help
	  Enable encryption support

config CVS_ROOTCOMMIT
	bool
	depends on CVS_SERVER
	prompt "Allow root commits"
	help
	  Allow the root user to commit files

comment "install options   ---"

config CVS_SERVER_POPULATE_CVSROOT
	bool
	depends on CVS_SERVER
	prompt "Populate CVSROOT files"
	help
	  This will install a list of files into target's cvs repository. These files
	  are supporting files; they do not have to exist for cvs to operate, but they
	  allow you to make cvs operation more flexible.
	  Here is the list of files cvs can run on some events:
	  - commitinfo
	  - cvsignore
	  - cvswrappers
	  - editinfo
	  - history
	  - loginfo
	  - modules
	  - rcsinfo
	  - taginfo
	  and for general configuration:
	  - config
	  - passwd
	  - readers
	  - writers
	  PTXdist will copy these files from the active project from projectroot/cvsroot/
	  into target's file system. Only existing files in projectroot/cvsroot/ will be
	  copied to /srv/cvsroot/CVSROOT/ (or anywhere you locate the repository). To use
	  this feature do not leave "cvs' repository" entry empty!

comment "runtime options   ---"

config CVS_SERVER_REPOSITORY
	string
	depends on CVS_SERVER
	prompt "cvs' repository"
	default "/srv/cvsroot"
	help
	  This will be cvs server's root repository (given to cvs as --allow-root=...).
	  You must give a path here to use the "Populate CVSROOT files" feature.

choice
	prompt "cvs startup type"
	depends on CVS_SERVER

	config CVS_STARTSCRIPT
		bool
		prompt "startscript (standalone)"
		help
		  This installs cvs startup script /etc/init.d/cvs. With this
		  script the cvs server will be started at system startup and
		  waits for connections

	config CVS_INETD
		bool
		prompt "inetd"
		help
		  Install a inetd rule for cvs. This option adds the following line
		  to /etc/inetd.conf.d/cvs:

		  cvs stream tcp nowait root /usr/bin/cvs cvsd -f --allow-root=/srv/cvsroot pserver

		  Note: You must enable one of the two possible inet daemons:
		  There is one embedded in busybox and one in packet inetutils.
endchoice

endif
